apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: registry
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: registry:latest
        ports:
        - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: registry
  labels:
    app: registry
spec:
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: registry
  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: registry-ui
  labels:
    app: registry-ui
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: registry-ui
    tier: registry-ui
  type: NodePort
  
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: registry-ui
  labels:
    app: registry-ui
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: registry-ui
        tier: registry-ui
    spec:
      containers:
      - image: hyper/docker-registry-web
        name: registry-ui
        ports:
        - containerPort: 8080
          name: registry-ui
        env:
          - name: REGISTRY_URL
            value: http://registry:5000/v2
          - name: REGISTRY_NAME
            value: cluster-registry

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
 name: registry-ui-ingress
spec:
 rules:
   - host: registry.127.0.0.1.xip.io
     http:
       paths:
         - path: /
           backend:
             serviceName: registry-ui
             servicePort: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: kube-registry-proxy
spec:
  containers:
  - name: kube-registry-proxy
    image: gcr.io/google_containers/kube-registry-proxy:0.3
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
    env:
    - name: REGISTRY_HOST
      value: registry.default.svc.cluster.local
    - name: REGISTRY_PORT
      value: "5000"
    - name: FORWARD_PORT
      value: "5000"
    ports:
    - name: registry
      containerPort: 5000
      hostPort: 5000

